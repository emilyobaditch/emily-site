{"version":3,"sources":["styleguide/DynamicStyledSystemComponent.tsx","styleguide/colors.ts","styleguide/typographyStyles.ts","styleguide/Typography.tsx","styleguide/Box.tsx","components/NavLinks.tsx","components/TopBar.tsx","components/ContactLinks.tsx","components/Footer.tsx","components/Base.tsx","utils/hooks.ts","components/Home.tsx","components/Bio.tsx","components/Contact.tsx","components/games/tictactoe/Square.tsx","styleguide/Checkbox.tsx","components/games/tictactoe/utils.ts","components/games/tictactoe/TicTacToe.tsx","components/Games.tsx","serviceWorker.ts","styleguide/space.ts","styleguide/theme.ts","index.tsx","App.tsx"],"names":["styled","div","space","fontSize","fontStyle","size","layout","color","textStyle","letterSpacing","fontFamily","fontWeight","borderRadius","border","lineHeight","textAlign","colors","ultra","dull","accent","default","dark","darker","fontFamilies","typographyStyles","H1","as","H2","H3","H4","H5","LargeLead","SmallLead","Paragraph","SmallParagraph","createComponent","displayName","component","props","DynamicStyledSystemComponent","children","Typography","Box","boxStyle","NavLinkBase","NavLinks","style","textDecoration","to","paddingRight","TopBarBase","theme","Wrapper","TopBar","paddingLeft","Icon","img","ContactLinksBase","ContactLinks","href","src","FooterBase","Footer","padding","Content","BaseBase","Base","useMediaQuery","arg","useState","queryMatch","setQueryMatch","breakpoints","useContext","ThemeContext","useLayoutEffect","matchMediaFunc","bp","setMediaMatchHandler","e","matches","mediaQueryList","window","matchMedia","addListener","removeListener","Image","MobileImage","Home","smUp","BioBase","Bio","ContactBase","EmailLink","a","Contact","SquareButton","button","infra","Square","id","symbol","onClick","disabled","BaseButton","Checkbox","React","active","setActive","type","alt","WIN_COMBOS","ROW_INDEX","RowBase","PlayAgainButton","Board","TicTacToe","currPlayer","setCurrPlayer","isOnePlayer","setIsOnePlayer","gameFull","setGameFull","gameState","setGameState","winner","setWinner","onSquareClick","newState","handleReset","squareSymbol","i","length","checkWinner","isWinner","player","Object","keys","rando","Math","floor","random","String","map","val","key","GamesBase","Games","Boolean","location","hostname","match","defaultTheme","NONE","XS","S","M","L","XL","XXL","ReactDOM","render","basename","pathname","exact","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b8b5617d.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport {\n  borderRadius,\n  BorderRadiusProps,\n  border,\n  BorderProps,\n  color,\n  layout,\n  LayoutProps,\n  fontFamily,\n  FontFamilyProps,\n  fontSize,\n  FontSizeProps,\n  fontStyle,\n  FontStyleProps,\n  fontWeight,\n  FontWeightProps,\n  letterSpacing,\n  LetterSpacingProps,\n  lineHeight,\n  LineHeightProps,\n  size,\n  SizeProps,\n  space,\n  SpaceProps,\n  textAlign,\n  TextAlignProps,\n  textStyle,\n  TextStyleProps,\n} from 'styled-system'\n\nexport type StyledSystemProps =\n  | SpaceProps\n  | FontSizeProps\n  | FontStyleProps\n  | SizeProps\n  | TextStyleProps\n  | LetterSpacingProps\n  | FontFamilyProps\n  | FontWeightProps\n  | BorderRadiusProps\n  | BorderProps\n  | LayoutProps\n  | FontFamilyProps\n  | LineHeightProps\n  | TextAlignProps\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  | { color: string; as?: keyof JSX.IntrinsicElements | React.ComponentType<any> }\n\nexport default styled.div`\n  ${space}\n  ${fontSize}\n  ${fontStyle}\n  ${size}\n  ${layout}\n  ${color}\n  ${textStyle}\n  ${letterSpacing}\n  ${fontFamily}\n  ${fontWeight}\n  ${borderRadius}\n  ${border}\n  ${lineHeight}\n  ${textAlign}\n`\n","import * as CSS from 'csstype'\n\nexport interface ThemeColors {\n  ultra: CSS.ColorProperty\n  dull: CSS.ColorProperty\n  accent: CSS.ColorProperty\n  default: CSS.ColorProperty\n  dark: CSS.ColorProperty\n  darker: CSS.ColorProperty\n}\n\nexport const colors: ThemeColors = {\n  ultra: '#FFF',\n  dull: '#2d4159',\n  accent: '#0677a1',\n  default: '#895061',\n  dark: '#78244c',\n  darker: '#59253a',\n}\n","import { colors } from './colors'\nimport { StyledSystemProps } from './DynamicStyledSystemComponent'\n\nconst fontFamilies: { heading: string; body: string } = {\n  heading: 'Spartan',\n  body: 'Spartan',\n}\n\ninterface TypographyStyles {\n  H1: StyledSystemProps\n  H2: StyledSystemProps\n  H3: StyledSystemProps\n  H4: StyledSystemProps\n  H5: StyledSystemProps\n  LargeLead: StyledSystemProps\n  SmallLead: StyledSystemProps\n  Paragraph: StyledSystemProps\n  SmallParagraph: StyledSystemProps\n}\nexport const typographyStyles: TypographyStyles = {\n  H1: {\n    fontSize: [50, 51, 52, 57],\n    fontWeight: 700,\n    fontFamily: fontFamilies.heading,\n    as: 'h1',\n    color: colors.ultra,\n  },\n  H2: {\n    fontSize: [37, 39, 41, 43],\n    fontWeight: 700,\n    color: colors.ultra,\n    fontFamily: fontFamilies.heading,\n    as: 'h2',\n  },\n  H3: {\n    fontSize: [27, 28, 30, 32],\n    fontWeight: 700,\n    color: colors.dark,\n    fontFamily: fontFamilies.heading,\n    as: 'h3',\n  },\n  H4: {\n    fontSize: [18, 20, 22, 24],\n    fontWeight: 700,\n    color: colors.dull,\n    fontFamily: fontFamilies.heading,\n    as: 'h4',\n  },\n  H5: {\n    fontWeight: 700,\n    fontSize: [16, 17, 19, 21],\n    color: colors.ultra,\n    fontFamily: fontFamilies.heading,\n    as: 'h5',\n  },\n  LargeLead: {\n    fontWeight: 500,\n    color: colors.accent,\n    fontSize: [18, 20, 22, 24],\n    fontFamily: fontFamilies.heading,\n    as: 'p',\n  },\n  SmallLead: {\n    fontWeight: 500,\n    color: colors.accent,\n    fontSize: [17, 18, 19, 21],\n    fontFamily: fontFamilies.heading,\n    as: 'p',\n  },\n  Paragraph: {\n    fontSize: [14, 15, 15, 16],\n    fontWeight: 300,\n    color: colors.darker,\n    fontFamily: fontFamilies.body,\n    as: 'p',\n    lineHeight: 2,\n  },\n  SmallParagraph: {\n    fontSize: [13, 14, 14, 15],\n    fontWeight: 300,\n    color: colors.darker,\n    fontFamily: fontFamilies.body,\n    as: 'p',\n  },\n}\n","import React from 'react'\nimport DynamicStyledSystemComponent, { StyledSystemProps } from './DynamicStyledSystemComponent'\nimport { typographyStyles } from './typographyStyles'\n\ninterface TypographyComponentProps {\n  H1: React.FC<StyledSystemProps>\n  H2: React.FC<StyledSystemProps>\n  H3: React.FC<StyledSystemProps>\n  H4: React.FC<StyledSystemProps>\n  H5: React.FC<StyledSystemProps>\n  LargeLead: React.FC<StyledSystemProps>\n  SmallLead: React.FC<StyledSystemProps>\n  Paragraph: React.FC<StyledSystemProps>\n  SmallParagraph: React.FC<StyledSystemProps>\n}\n\nconst createComponent: (\n  textStyle: StyledSystemProps,\n  displayName: string,\n) => React.FC<StyledSystemProps> = (textStyle, displayName) => {\n  const component: React.FC<StyledSystemProps> = props => (\n    <DynamicStyledSystemComponent {...textStyle} {...props}>\n      {props.children}\n    </DynamicStyledSystemComponent>\n  )\n  component.displayName = displayName\n  return component\n}\n\nexport const Typography: TypographyComponentProps = {\n  H1: createComponent(typographyStyles.H1, 'H1'),\n  H2: createComponent(typographyStyles.H2, 'H2'),\n  H3: createComponent(typographyStyles.H3, 'H3'),\n  H4: createComponent(typographyStyles.H4, 'H4'),\n  H5: createComponent(typographyStyles.H5, 'H5'),\n  LargeLead: createComponent(typographyStyles.LargeLead, 'LargeLead'),\n  SmallLead: createComponent(typographyStyles.SmallLead, 'SmallLead'),\n  Paragraph: createComponent(typographyStyles.Paragraph, 'Paragraph'),\n  SmallParagraph: createComponent(typographyStyles.SmallParagraph, 'SmallParagraph'),\n}\n","import React from 'react'\nimport DynamicStyledSystemComponent, { StyledSystemProps } from './DynamicStyledSystemComponent'\n\nconst baseBoxStyles: StyledSystemProps = {}\n\nconst Box: (boxStyle: StyledSystemProps) => React.FC<StyledSystemProps> = boxStyle => {\n  const component: React.FC<StyledSystemProps> = props => (\n    <DynamicStyledSystemComponent {...boxStyle} {...props}>\n      {props.children}\n    </DynamicStyledSystemComponent>\n  )\n  component.displayName = 'Box'\n  return component\n}\n\nexport default Box(baseBoxStyles)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { Typography } from '../styleguide/Typography'\nimport Box from '../styleguide/Box'\n\nconst { H5 } = Typography\n\nconst NavLinkBase = styled(Box)`\n  display: flex;\n  margin-right: 12px;\n`\n\nexport default function NavLinks() {\n  return (\n    <NavLinkBase>\n      <Link style={{ textDecoration: 'none' }} to={'/'}>\n        <H5 paddingRight=\"12px\">Home</H5>\n      </Link>\n      <Link style={{ textDecoration: 'none' }} to={'/bio'}>\n        <H5 paddingRight=\"12px\">Bio</H5>\n      </Link>\n      <Link style={{ textDecoration: 'none' }} to={'/contact'}>\n        <H5 paddingRight=\"12px\">Contact</H5>\n      </Link>\n      <Link style={{ textDecoration: 'none' }} to={'/games'}>\n        <H5 paddingRight=\"12px\">Bored?</H5>\n      </Link>\n    </NavLinkBase>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport NavLinks from './NavLinks'\nimport Box from '../styleguide/Box'\nimport { Typography } from '../styleguide/Typography'\n\nconst { H2 } = Typography\n\nconst TopBarBase = styled.div`\n  align-items: center;\n  justify-content: space-between;\n  display: flex;\n  position: fixed;\n  top: 0;\n  height: 62px;\n  width: 100%;\n  background-color: ${({ theme }) => theme.colors.dull};\n`\nconst Wrapper = styled(Box)`\n  display: flex;\n`\nexport default function TopBar() {\n  return (\n    <TopBarBase>\n      <H2 paddingLeft=\"12px\">emily</H2>\n      <Wrapper>\n        <NavLinks />\n      </Wrapper>\n    </TopBarBase>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Box from '../styleguide/Box'\n\nconst Icon = styled.img`\n  width: 24px;\n  height: 24px;\n  padding-right: 12px;\n`\n\nconst ContactLinksBase = styled(Box)`\n  display: flex;\n`\nexport default function ContactLinks() {\n  return (\n    <ContactLinksBase>\n      <a href={'https://github.com/emilyobaditch'}>\n        <Icon src=\"images/github.png\" />\n      </a>\n      <a href={'https://www.linkedin.com/in/emily-obaditch-a0090511b/'}>\n        <Icon src=\"images/linkedin.png\" />\n      </a>\n    </ContactLinksBase>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport ContactLinks from './ContactLinks'\nimport { Typography } from '../styleguide/Typography'\n\nconst { SmallLead } = Typography\n\nconst FooterBase = styled.div`\n  align-items: center;\n  display: flex;\n  height: 42px;\n  width: 100%;\n  z-index: 99;\n  background-color: ${({ theme }) => theme.colors.darker};\n`\n\nexport default function Footer() {\n  return (\n    <FooterBase>\n      <SmallLead padding=\"0px 12px\">Contact Me</SmallLead>\n      <ContactLinks />\n    </FooterBase>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport TopBar from './TopBar'\nimport Footer from './Footer'\nimport Box from '../styleguide/Box'\n\ntype Props = {\n  children?: any\n}\nconst Content = styled(Box)`\n  min-height: calc(100vh - 104px);\n  align-items: center;\n  display: flex;\n`\nconst BaseBase = styled(Box)`\n  margin-top: 64px;\n  overflow: hidden;\n`\nexport default function Base({ children }: Props) {\n  return (\n    <BaseBase>\n      <TopBar />\n      <Content>{children}</Content>\n      <Footer />\n    </BaseBase>\n  )\n}\n","import { useState, useLayoutEffect, useContext } from 'react'\nimport { ThemeContext } from 'styled-components'\n\nexport function useTheme() {\n  return useContext(ThemeContext)\n}\nexport function useMediaQuery(arg: Function | number): boolean {\n  const [queryMatch, setQueryMatch]: [boolean, Function] = useState(false)\n  const { breakpoints } = useTheme()\n\n  useLayoutEffect(() => {\n    let matchMediaFunc = null\n    let bp = null\n    if (typeof arg === 'function') {\n      matchMediaFunc = arg\n    } else if (typeof arg === 'number') {\n      bp = arg\n    }\n    const setMediaMatchHandler: Function = (e: { matches: boolean }) => setQueryMatch(e.matches)\n\n    const mediaQueryList = matchMediaFunc\n      ? matchMediaFunc()\n      : window.matchMedia(`(min-width: ${breakpoints[bp || 0]})`)\n\n    setMediaMatchHandler(mediaQueryList)\n\n    mediaQueryList.addListener(setMediaMatchHandler)\n    return () => mediaQueryList.removeListener(setMediaMatchHandler)\n  }, [arg, breakpoints])\n\n  return queryMatch\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Base from './Base'\nimport Box from '../styleguide/Box'\nimport { Typography } from '../styleguide/Typography'\nimport { useMediaQuery } from '../utils/hooks'\n\nconst { LargeLead, H2 } = Typography\n\nconst Image = styled.img`\n  width: 100%;\n  height: 100%;\n  z-index: -1;\n`\nconst MobileImage = styled.img`\n  position: fixed;\n  opacity: 0.2;\n  bottom: 0;\n  z-index: -1;\n`\nconst Wrapper = styled(Box)`\n  display: flex;\n  align-items: center;\n  position: relative;\n`\nexport default function Home() {\n  const smUp = useMediaQuery(2)\n  return (\n    <Base>\n      <Wrapper>\n        <Box paddingLeft=\"5px\">\n          <H2 color=\"darker\" textAlign=\"center\">\n            Hey, there! I&apos;m Emily.\n          </H2>\n          <LargeLead textAlign=\"center\">\n            Frontend engineer, UX enthusiast, and chocolate lover based in New York City.{' '}\n          </LargeLead>\n        </Box>\n        {smUp ? <Image src=\"images/emily.jpeg\" /> : <MobileImage src=\"images/emily.jpeg\" />}\n      </Wrapper>\n    </Base>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Box from '../styleguide/Box'\nimport Base from './Base'\n\nimport { Typography } from '../styleguide/Typography'\n\nconst { H3, Paragraph, SmallLead } = Typography\n\nconst BioBase = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  justify-content: center;\n  position: relative;\n`\nconst Image = styled.img`\n  width: 100%;\n  position: fixed;\n  bottom: 0;\n  opacity: 0.2;\n  z-index: -1;\n`\nexport default function Bio() {\n  return (\n    <Base>\n      <BioBase>\n        <H3 textAlign=\"center\">About Me</H3>\n        <SmallLead textAlign=\"center\">10% Software Engineer, 90% Coffee </SmallLead>\n        <Paragraph padding={['0px 8px', '0px 8px', '0px 200px']} textAlign=\"center\">\n          I&apos;m Emily, thanks for coming to my site! Here&apos;s little bit about me. I was born\n          in New Jersey, studied Computer Science at the University of Notre Dame (go Irish!) and\n          currently live in New York city. I am a frontend engineer with a strong love for React.\n          When I&apos;m not creating awesome code I spend my time searching for the best NYC steak,\n          going to spin class, and listening to music.\n          <br />\n          <br />\n          I&apos;ve made this website to learn new skills and have something to call completely my\n          own. Currently refining my TypeScript acumen and playing around with color palettes.\n          <br />\n          <br />\n          That&apos;s about it for now!\n        </Paragraph>\n        <Image src=\"images/background.png\" />\n      </BioBase>\n    </Base>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport Base from './Base'\nimport Box from '../styleguide/Box'\nimport { Typography } from '../styleguide/Typography'\nimport ContactLinks from './ContactLinks'\n\nconst { LargeLead, H2, SmallLead } = Typography\n\nconst ContactBase = styled(Box)`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  width: 100%;\n  justify-content: center;\n`\nconst EmailLink = styled.a`\n  color: ${({ theme }) => theme.colors.darker};\n`\nexport default function Contact() {\n  return (\n    <Base>\n      <ContactBase>\n        <H2 color=\"darker\" textAlign=\"center\">\n          Contact Me\n        </H2>\n        <LargeLead padding={['0px 8px']} textAlign=\"center\">\n          Looking to connect? Feel free to reach out!\n        </LargeLead>\n        <SmallLead padding={['0px 16px']} textAlign=\"center\">\n          Email{' '}\n          <EmailLink href=\"mailto:ecobaditch@gmail.com?subject=Reaching%20Out\">\n            ecobaditch@gmail.com\n          </EmailLink>{' '}\n          for resume\n        </SmallLead>\n        <ContactLinks />\n      </ContactBase>\n    </Base>\n  )\n}\n","import * as React from 'react'\nimport styled from 'styled-components'\nimport { Typography } from '../../../styleguide/Typography'\n\nconst { SmallLead } = Typography\n\ntype Props = {\n  id: number\n  symbol: string\n  onClick: Function\n  disabled: boolean\n}\nconst SquareButton = styled.button`\n  height: 100px;\n  width: 100px;\n  border: 1px solid ${({ theme }) => theme.colors.darker};\n  background-color: ${({ theme }) => theme.colors.infra};\n`\nconst Square: React.FC<Props> = ({ id, symbol = '', onClick, disabled }) => {\n  return (\n    <SquareButton onClick={() => onClick(id)} disabled={disabled}>\n      <SmallLead textAlign=\"center\">{symbol}</SmallLead>\n    </SquareButton>\n  )\n}\nexport default Square\n","import * as React from 'react'\nimport styled from 'styled-components'\nimport Box from './Box'\n\ntype Props = {\n  onClick: Function\n}\nconst BaseButton = styled.button`\n  background-color: #fff;\n  border: none;\n  height: 25px;\n`\nconst Wrapper = styled(Box)`\n  display: flex;\n  align-items: center;\n`\nconst Checkbox: React.FC<Props> = ({ onClick, children }) => {\n  const [active, setActive] = React.useState(false)\n\n  const handleClick = () => {\n    setActive(!active)\n    onClick()\n  }\n  return (\n    <Wrapper>\n      <BaseButton type=\"button\" onClick={handleClick}>\n        <img alt=\"checkbox\" src={active ? 'images/checked.png' : 'images/unchecked.png'} />\n      </BaseButton>\n      {children}\n    </Wrapper>\n  )\n}\n\nexport default Checkbox\n","const WIN_COMBOS = [\n  [1, 2, 3],\n  [4, 5, 6],\n  [7, 8, 9],\n  [1, 5, 9],\n  [3, 5, 7],\n  [1, 4, 7],\n  [2, 5, 8],\n  [3, 6, 9],\n]\n\nexport const ROW_INDEX = [1, 4, 7]\nexport const checkWinner = ({ gameState }: Record<string, any>) => {\n  for (let i = 0; i < WIN_COMBOS.length; i++) {\n    if (\n      gameState[WIN_COMBOS[i][0]] === gameState[WIN_COMBOS[i][1]] &&\n      gameState[WIN_COMBOS[i][1]] === gameState[WIN_COMBOS[i][2]]\n    ) {\n      return [true, gameState[WIN_COMBOS[i][0]]]\n    }\n  }\n  return [false, '']\n}\n","import * as React from 'react'\nimport styled from 'styled-components'\nimport Box from '../../../styleguide/Box'\nimport Square from './Square'\nimport CheckBox from '../../../styleguide/Checkbox'\nimport { Typography } from '../../../styleguide/Typography'\nimport { checkWinner, ROW_INDEX } from './utils'\n\nconst { LargeLead, SmallLead } = Typography\n\nconst RowBase = styled(Box)`\n  display: flex;\n`\n\nconst PlayAgainButton = styled.button`\n  background-color: #fff;\n  border: none;\n  color: ${({ theme }) => theme.colors.darker};\n`\n\nconst Board = styled(Box)`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  justify-content: center;\n  width: 100%;\n`\n\nconst TicTacToe: React.FC = () => {\n  const [currPlayer, setCurrPlayer] = React.useState('X')\n  const [isOnePlayer, setIsOnePlayer] = React.useState(false)\n\n  const [gameFull, setGameFull] = React.useState(false)\n  const [gameState, setGameState] = React.useState<Record<string, string> | null>(null)\n  const [winner, setWinner] = React.useState(null)\n  const onSquareClick = React.useCallback(\n    (id: string) => {\n      const newState = { ...gameState, [id]: currPlayer }\n      setGameState({ ...newState })\n      const nextPlayer = currPlayer === 'X' ? 'O' : 'X'\n      setCurrPlayer(nextPlayer)\n    },\n    [currPlayer, gameState],\n  )\n\n  const handleReset = () => {\n    setGameState({})\n    setGameFull(false)\n    setCurrPlayer('X')\n  }\n\n  const setOnePlayer = () => {\n    setIsOnePlayer(!isOnePlayer)\n    handleReset()\n  }\n  const squareSymbol = (id: string | number) => {\n    if (gameState && id in gameState) {\n      return gameState[id]\n    }\n    return ''\n  }\n\n  React.useEffect(() => {\n    if (gameState) {\n      const [isWinner, player] = checkWinner({ gameState })\n      if (isWinner) {\n        setWinner(player)\n      }\n      if (Object.keys(gameState).length === 9) {\n        setGameFull(true)\n      }\n    }\n  }, [gameState])\n\n  React.useEffect(() => {\n    if (isOnePlayer && currPlayer === 'O' && gameState && Object.keys(gameState).length < 9) {\n      let rando = Math.floor(Math.random() * 10)\n      while (rando in gameState) {\n        rando = Math.floor(Math.random() * 10)\n      }\n      onSquareClick(String(rando))\n    }\n  }, [currPlayer, gameState, isOnePlayer, onSquareClick])\n\n  return (\n    <Board>\n      <LargeLead>{`Current Player: ${isOnePlayer ? 'X' : currPlayer} `}</LargeLead>\n      {winner && (\n        <>\n          <SmallLead>{`Player ${winner} wins!`}</SmallLead>\n          <PlayAgainButton onClick={handleReset}>Play again?</PlayAgainButton>\n        </>\n      )}\n      {ROW_INDEX.map(val => {\n        return (\n          <RowBase key={val}>\n            <Square\n              disabled={!!winner || gameFull}\n              id={val}\n              onClick={onSquareClick}\n              symbol={squareSymbol(val)}\n            />\n            <Square\n              disabled={!!winner || gameFull}\n              id={val + 1}\n              onClick={onSquareClick}\n              symbol={squareSymbol(val + 1)}\n            />\n            <Square\n              disabled={!!winner || gameFull}\n              id={val + 2}\n              onClick={onSquareClick}\n              symbol={squareSymbol(val + 2)}\n            />\n          </RowBase>\n        )\n      })}\n      <PlayAgainButton onClick={handleReset}>Reset</PlayAgainButton>\n      <CheckBox onClick={setOnePlayer}>One Player</CheckBox>\n    </Board>\n  )\n}\n\nexport default TicTacToe\n","import React from 'react'\nimport styled from 'styled-components'\nimport TicTacToe from './games/tictactoe/TicTacToe'\nimport Base from './Base'\nimport Box from '../styleguide/Box'\n\nimport { Typography } from '../styleguide/Typography'\n\nconst { H2 } = Typography\n\nconst GamesBase = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  justify-content: center;\n  position: relative;\n`\nexport default function Games() {\n  return (\n    <Base>\n      <GamesBase>\n        <H2 color=\"darker\" textAlign=\"center\">\n          Bored? Play some games:\n        </H2>\n        <TicTacToe />\n      </GamesBase>\n    </Base>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export interface Space {\n  NONE: number\n  XS: number\n  S: number\n  M: number\n  L: number\n  XL: number\n  XXL: number\n}\n\nexport const space: Space = {\n  NONE: 0,\n  XS: 2,\n  S: 4,\n  M: 8,\n  L: 16,\n  XL: 32,\n  XXL: 64,\n}\n","import { Theme } from 'styled-system'\nimport { colors } from './colors'\nimport { space } from './space'\n\nexport const breakpoints: string[] = ['319px', '424px', '767px', '1023px']\n\nexport const defaultTheme: Theme = {\n  space: {\n    ...space,\n  },\n  breakpoints,\n\n  colors: {\n    ...colors,\n  },\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { ThemeProvider } from 'styled-components'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { defaultTheme } from './styleguide/theme'\n\nReactDOM.render(\n  <ThemeProvider theme={defaultTheme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import React from 'react'\nimport { Route, Switch, BrowserRouter } from 'react-router-dom'\nimport Home from './components/Home'\nimport Bio from './components/Bio'\nimport Contact from './components/Contact'\nimport Games from './components/Games'\n\nexport default function App() {\n  return (\n    <div style={{ fontFamily: 'Spartan' }}>\n      <BrowserRouter basename={window.location.pathname || ''}>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route exact path=\"/bio\" component={Bio} />\n          <Route exact path=\"/contact\" component={Contact} />\n          <Route exact path=\"/games\" component={Games} />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  )\n}\n"],"sourceRoot":""}